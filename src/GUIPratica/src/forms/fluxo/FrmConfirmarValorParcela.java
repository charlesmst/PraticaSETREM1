/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms.fluxo;

import components.JDialogController;
import components.ValidacoesTipos;
import java.awt.Frame;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import model.fluxo.Conta;
import model.fluxo.Parcela;
import services.fluxo.ContaService;
import services.fluxo.ParcelaService;
import utils.AlertaTipos;
import utils.Forms;

/**
 *
 * @author charles
 */
public class FrmConfirmarValorParcela extends JDialogController {

    private Conta conta;
    private Parcela parcela;
    private double valorOriginal;

    private ActionListener listenerOnCancelar;

    /**
     * Creates new form FrmConfirmarValorParcela
     */
    public FrmConfirmarValorParcela(Conta conta, Parcela parcela, double valorOriginal) {
        super(null, "Alteração de valor de parcela");
        this.conta = conta;
        this.parcela = parcela;
        this.valorOriginal = valorOriginal;
        initComponents();
        setupForm();
    }

    private void setupForm() {
        buttonGroup1.add(diluirProximas);
        buttonGroup1.add(diluirTodas);
        buttonGroup1.add(novaParcela);
        buttonGroup1.add(alterarValorConta);
        setLocationRelativeTo(null);
        validator.validarCustom(diluirProximas, (valor) -> {
            return buttonGroup1.getSelection() != null;
        }, "Selecione uma das opções");
        diluirProximas.setSelected(true);
        setDefaultButton(btnOk);
        //Se é a última parcela, não tem
        if (parcela.getParcela() == conta.getParcelas().size()) {
            alterarValorConta.setSelected(true);
            diluirProximas.setEnabled(false);
        }
        if (conta.getParcelas().size() == 1) {
            diluirTodas.setSelected(false);
        }

        int parcelaAtual = parcela.getParcela();
        List<Parcela> disolver = new ArrayList<>();
        conta.getParcelas().stream().filter((parcela1) -> (parcela1.getParcela() != parcelaAtual && parcela1.getPagamentos().isEmpty())).forEach((_item) -> {
            disolver.add(parcela);
        });
        if (disolver.isEmpty()) {
            diluirTodas.setEnabled(false);
        }
        double valorDiferente = ContaService.valorConta(conta);
        double diferenca = conta.getValorTotal() - valorDiferente;
        if (diferenca < 0d) {
            novaParcela.setEnabled(false);
        }
    }
    boolean ok = false;

    private void save() {
        if (!validator.isValido()) {
            return;
        }
        if (diluirProximas.isSelected()) {
            int parcelaAtual = parcela.getParcela();
            List<Parcela> disolver = new ArrayList<>();
            conta.getParcelas().stream().filter((parcela1) -> (parcela1.getParcela() > parcelaAtual)).forEach((_item) -> {
                disolver.add(_item);
            });
            ParcelaService.diluir(conta, disolver);
        } else if (diluirTodas.isSelected()) {
            int parcelaAtual = parcela.getParcela();
            List<Parcela> disolver = new ArrayList<>();
            conta.getParcelas().stream().filter((parcela1) -> (parcela1.getParcela() != parcelaAtual && parcela1.getPagamentos().isEmpty())).forEach((_item) -> {
                disolver.add(_item);
            });
            if (disolver.size() == 0) {
                Forms.mensagem("Não é possível dissolver as parcelas pois não há nenhuma parcela sem pagamentos", AlertaTipos.erro);
                return;
            }
            ParcelaService.diluir(conta, disolver);
        } else if (novaParcela.isSelected()) {

            double valorDiferente = ContaService.valorConta(conta);
            double diferenca = conta.getValorTotal() - valorDiferente;
            Parcela p = new Parcela();
            p.setConta(conta);
            p.setParcela(conta.getParcelas().size() + 1);
            p.setDataLancamento(new Date());
            p.setValor(diferenca);
            p.setBoleto("");
            conta.getParcelas().add(p);
        } else {
            conta.setValorTotal(ContaService.valorConta(conta));
        }
        ok = true;
        dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        diluirProximas = new javax.swing.JRadioButton();
        novaParcela = new javax.swing.JRadioButton();
        alterarValorConta = new javax.swing.JRadioButton();
        diluirTodas = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/warning.png"))); // NOI18N
        jLabel1.setText("O valor da parcela foi alterado, qual a operação que você deseja realizar?");

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        diluirProximas.setSelected(true);
        diluirProximas.setText("Diluir nas próximas parcelas");

        novaParcela.setText("Lançar uma parcela nova");

        alterarValorConta.setText("Alterar valor da conta");

        diluirTodas.setText("Diluir em todas parcelas sem pagamento");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(diluirTodas)
                    .addComponent(alterarValorConta)
                    .addComponent(novaParcela)
                    .addComponent(diluirProximas)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(diluirProximas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(diluirTodas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(novaParcela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alterarValorConta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        save();
    }//GEN-LAST:event_btnOkActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (!ok) {
            listenerOnCancelar.actionPerformed(null);
        }
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton alterarValorConta;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnOk;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton diluirProximas;
    private javax.swing.JRadioButton diluirTodas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton novaParcela;
    // End of variables declaration//GEN-END:variables

    public ActionListener getListenerOnCancelar() {
        return listenerOnCancelar;
    }

    public void setListenerOnCancelar(ActionListener listenerOnCancelar) {
        this.listenerOnCancelar = listenerOnCancelar;
    }
}
