/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms.fluxo;

import components.JCampoBusca;
import java.awt.event.ActionEvent;
import components.JPanelControleButtons;

import components.JTableDataBinderListener;
import java.awt.EventQueue;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Vector;
import javassist.bytecode.analysis.Util;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.table.DefaultTableModel;
import model.fluxo.Conta;
import model.fluxo.ContaCategoria;
import model.fluxo.Parcela;
import services.ServiceException;
import services.fluxo.ContaService;
import utils.Globals;
import utils.Utils;

/**
 *
 * @author Charles
 */
public class FrmConta extends JPanelControleButtons {

    private final ContaService service;
//    JTableDataBinder table;

    public FrmConta() {
        initComponents();
        setBtnAddEnable(true);
        setBtnAlterarEnable(true);
        setBtnExcluirEnable(true);
        setBtnAtualizarEnable(true);

        service = new ContaService();

        table.setListener(new JTableDataBinderListener<Conta>() {

            @Override
            public Collection<Conta> lista(String busca) throws ServiceException {

                List<Conta> l = service.findContas(busca, jcbContasAPagar.isSelected(), jcbContasAReceber.isSelected());
                for (int i = (l.size() - 1); i >= 0; i--) {
                    if (!jcbStatus.getSelectedItem().toString().equals("TODOS") && !service.statusParcela(l.get(i)).equals(jcbStatus.getSelectedItem().toString())) {
                        l.remove(i);
                    }
                }
                return l;
            }

            @Override
            public Object[] addRow(Conta dado) {
                ImageIcon i = null;
                String status = service.statusParcela(dado);
                if (status.contains("ATRASADA")) {
                    i = Globals.iconeError;
                } else if (status.equals("FINALIZADA") || status.equals("EM DIA")) {
                    i = Globals.iconeSuccess;
                } else {
                    i = Globals.iconeWarning;
                }
                int pagas = 0;
                int total = 0;
                for (Parcela parcela : dado.getParcelas()) {
                    total++;
                    if (parcela.isFechado()) {
                        pagas++;
                    }
                }
                Object[] obj = new Object[11];
                obj[0] = dado.getId();
                obj[1] = dado.getDescricao();
                obj[2] = dado.getPessoa().getNome();
                obj[3] = dado.getCategoria().getTipo() == ContaCategoria.TipoCategoria.entrada ? "A Receber" : "A Pagar";
                obj[4] = Utils.formataDinheiro(ContaService.valorConta(dado));
                obj[5] = dado.getCategoria().toString();
                obj[6] = Utils.formataDinheiro(dado.getValorPago() - dado.getValorTotal());
                obj[7] = pagas + "/" + total;
                obj[8] = status;
                obj[9] = dado.getTipo().toString().toUpperCase();
                obj[10] = i;

                return obj;

            }
        });
        //Ao finalizar faz filtros
        table.setListenerFinalizacao((e) -> {
            String selected = jcbStatus.getSelectedItem().toString();
            if (selected.equals("TODOS")) {
                ArrayList<String> list = new ArrayList<>();
                list.add("TODOS");
                for (int i = (table.getDefaultTableModel().getRowCount() - 1); i >= 0; i--) {

                    String stAtual = table.getDefaultTableModel().getValueAt(i, 8).toString();
                    if (!list.contains(stAtual)) {
                        list.add(stAtual);
                    }
                }
                DefaultComboBoxModel model = new DefaultComboBoxModel(new Vector(list));
                jcbStatus.setModel(model);

                if (list.contains(selected)) {
                    model.setSelectedItem(selected);
                } else {
                    model.setSelectedItem("TODOS");
                }
            }
        });
        table.setBusca(txtBuscar, true);
        table.atualizar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        table = new components.JTableDataBinder();
        txtBuscar = new components.JTextFieldUpper(true);
        jLabel2 = new javax.swing.JLabel();
        jcbContasAPagar = new javax.swing.JCheckBox();
        jcbContasAReceber = new javax.swing.JCheckBox();
        btnPagamento = new javax.swing.JButton();
        btnParcelas = new javax.swing.JButton();
        jcbStatus = new javax.swing.JComboBox();

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Descrição", "Pessoa Relacionada", "Tipo", "Valor", "Categoria", "Saldo", "Pagas", "Parcelas", "Origem", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setBusca(txtBuscar);
        table.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jScrollPane2.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setMinWidth(10);
            table.getColumnModel().getColumn(0).setPreferredWidth(60);
            table.getColumnModel().getColumn(0).setMaxWidth(100);
            table.getColumnModel().getColumn(2).setMaxWidth(100);
            table.getColumnModel().getColumn(3).setMaxWidth(70);
            table.getColumnModel().getColumn(7).setMaxWidth(50);
            table.getColumnModel().getColumn(9).setMaxWidth(50);
            table.getColumnModel().getColumn(10).setPreferredWidth(30);
            table.getColumnModel().getColumn(10).setMaxWidth(30);
        }

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Buscar:");

        jcbContasAPagar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jcbContasAPagar.setSelected(true);
        jcbContasAPagar.setText("A Pagar");
        jcbContasAPagar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jcbContasAPagarStateChanged(evt);
            }
        });
        jcbContasAPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbContasAPagarActionPerformed(evt);
            }
        });

        jcbContasAReceber.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jcbContasAReceber.setSelected(true);
        jcbContasAReceber.setText("A Receber");
        jcbContasAReceber.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jcbContasAReceberStateChanged(evt);
            }
        });
        jcbContasAReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbContasAReceberActionPerformed(evt);
            }
        });

        btnPagamento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPagamento.setText("Pagamento");
        btnPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagamentoActionPerformed(evt);
            }
        });

        btnParcelas.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnParcelas.setText("Parcelas");
        btnParcelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnParcelasActionPerformed(evt);
            }
        });

        jcbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TODOS" }));
        jcbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbContasAPagar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbContasAReceber)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPagamento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnParcelas)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jcbContasAPagar)
                    .addComponent(jcbContasAReceber)
                    .addComponent(btnPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagamentoActionPerformed
        defaultUpdateOperation(table, (id) -> {

            Conta c = service.findConta(id);
            FrmParcelaPagamentoCadastro frm = new FrmParcelaPagamentoCadastro(c);
            frm.setListener((conta) -> {
                service.update(c);
                table.atualizar();
            });
            frm.setVisible(true);
        });

    }//GEN-LAST:event_btnPagamentoActionPerformed

    private void btnParcelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnParcelasActionPerformed
        defaultUpdateOperation(table, (id) -> {

            Conta c = service.findConta(id);
            FrmParcelaCadastro frm = new FrmParcelaCadastro(c,null);
            frm.setListener((conta) -> {
                service.update(c);
                table.atualizar();
            });
            frm.setVisible(true);
        });

    }//GEN-LAST:event_btnParcelasActionPerformed

    private void jcbContasAReceberStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jcbContasAReceberStateChanged
    }//GEN-LAST:event_jcbContasAReceberStateChanged

    private void jcbContasAPagarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jcbContasAPagarStateChanged

    }//GEN-LAST:event_jcbContasAPagarStateChanged

    private void jcbContasAReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbContasAReceberActionPerformed
        table.atualizar();
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbContasAReceberActionPerformed

    private void jcbContasAPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbContasAPagarActionPerformed
        table.atualizar();
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbContasAPagarActionPerformed

    private void jcbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbStatusActionPerformed
        table.atualizar();
    }//GEN-LAST:event_jcbStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPagamento;
    private javax.swing.JButton btnParcelas;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox jcbContasAPagar;
    private javax.swing.JCheckBox jcbContasAReceber;
    private javax.swing.JComboBox jcbStatus;
    private components.JTableDataBinder table;
    private components.JTextFieldUpper txtBuscar;
    // End of variables declaration//GEN-END:variables

    @Override
    public void btnAddActionPerformed(ActionEvent evt) {
//        model.createNew();
        JDialog dialog = new FrmContaCadastro();
        dialog.setVisible(true);
        table.atualizar();
    }

    @Override
    public void btnAlterarActionPerformed(ActionEvent evt) {
        defaultUpdateOperation(table, (i) -> {
            JDialog dialog = new FrmContaCadastro(i);
            dialog.setVisible(true);
        });

    }

    @Override
    public void btnExcluirActionPerformed(ActionEvent evt) {
        defaultDeleteOperation(table, (i) -> service.delete(i));
    }

    @Override
    public void btnAtualizarActionPerformed(ActionEvent evt) {
        table.atualizar();
    }
}
